<?php
/**
 * @file
 * Code for the ting_genre_page feature.
 */

include_once 'ting_genre_page.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function ting_genre_page_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Get nodes of type 'ding_event' and 'ding_news' which is tagged with the 
 * specified term value from the ding_content_tags vocabulary.
 * 
 * @param $tid
 *   The ID of the term to match against.
 * @param $node_type
 *   The type of nodes to return.
 * @param $field_name
 *   The name of the field containing the tag value.
 * @param $count
 *   The max number of nodes to return.
 * @param $limit
 *   A
 *
 * @return
 *   An array of node objects keyed by nid.
 */
function ting_genre_page_get_nodes_with_term($tid, $node_type, $field_name, $count, $time_limit = NULL) {
	$query = new EntityFieldQuery();
	$query->entityCondition('entity_type', 'node')
		->entityCondition('bundle', $node_type)
		->fieldCondition($field_name, 'tid', $tid)
		->range(0, $count);
	if (isset($time_limit)) {
		$query->propertyCondition('created', $time_limit, '>=');
	}
} 

/**
 * Helper function to get the value from the field with the specified field 
 * name. This function is only meant to be used with single-value-fields, and
 * will only return the first value in case of a multi-value-field.
 */
function _ting_genre_page_get_field_value($node, $field_name) {
	if (isset($node->{$field_name}) && !empty($node->{$field_name})) {
		$value = field_get_items('node', $node, $field_name);
		return array_shift(array_shift(array_values($value)));
	}
	return FALSE;
}