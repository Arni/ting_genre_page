<?php
/**
 * @file
 * Code for the ting_genre_page feature.
 */

include_once 'ting_genre_page.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function ting_genre_page_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * For testing.
 */
function ting_genre_page_init() {
	$called = &drupal_Static(__FUNCTION__);
	if (!$called) {
		$nids = ting_genre_page_get_events_with_term(10, 5, 352);
		$nodes = node_load_multiple($nids);
		file_put_contents("/home/drupalpro/debug/debug.txt", print_r($nids , TRUE), FILE_APPEND);
	}	
}

/**
 * Get nodes of type 'ding_event' with the specified tag.
 * 
 * @param $tid
 *   The ID of the term (tag) to match against.
 * @param $count_limit
 *   The max number of nodes to return.
 * @param $time_limit
 *   A time limit in days specifying how many days into the future an event, 
 *   in the return array, is allowed to start.
 *
 * @return $return
 *   An array node IDs.
 */
function ting_genre_page_get_events_with_term($tid, $count_limit, $time_limit) {
	// Convert datetimes to the database format.
	$now = date('Y-m-d H:i:s'); 
	$time_limit = date('Y-m-d H:i:s', time() + ($time_limit * 24 * 3600));
	$query = new EntityFieldQuery();
	$query->entityCondition('entity_type', 'node')
		->entityCondition('bundle', 'ding_event')
		->propertyCondition('status', 1)
		->fieldCondition('field_ding_event_tags', 'tid', $tid)
		// Limit the result to events that hasn't completed yet.
		->fieldCondition('field_ding_event_date', 'value2', $now, '>')
		// Add the supplied $time_limit contraint to our query.
		->fieldCondition('field_ding_event_date', 'value', $time_limit, '<=')
		// Get the events with the nearest start datetime.
		->fieldOrderBy('field_ding_event_date', 'value', 'ASC')
		// Add the supplied $count_limit constraint.
		->range(0, $count_limit);
	$result = $query->execute();
	$return = isset($result['node']) ? array_keys($result['node']) : array();
	return $return;	
}

/**
 * Helper function to get the value from the field with the specified field 
 * name. This function is only meant to be used with single-value-fields, and
 * will only return the first value in case of a multi-value-field.
 */
function _ting_genre_page_get_field_value($node, $field_name) {
	if (isset($node->{$field_name}) && !empty($node->{$field_name})) {
		$value = field_get_items('node', $node, $field_name);
		return array_shift(array_shift(array_values($value)));
	}
	return FALSE;
}